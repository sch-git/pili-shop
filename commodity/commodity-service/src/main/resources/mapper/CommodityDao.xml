<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sch.commodityservice.dao.CommodityDao">
    <resultMap id="BaseResultMap" type="com.sch.commodityservice.entity.Commodity">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="category_id" jdbcType="BIGINT" property="categoryId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="describe" jdbcType="VARCHAR" property="describe"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="create_id" jdbcType="BIGINT" property="createId"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_id" jdbcType="BIGINT" property="updateId"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <!--添加商品-->
    <insert id="addCommodity" parameterType="com.sch.commodityservice.dto.AddCommodityDTO"
            useGeneratedKeys="true" keyProperty="id">
    insert into t_commodity (category_id, `name`,
  price, `describe`, status, url,
  create_id, create_name, create_time,
  update_id, update_name, update_time)
     values (#{categoryId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
  #{price,jdbcType=DECIMAL}, #{describe,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{url,jdbcType=VARCHAR},
  #{createId,jdbcType=BIGINT}, #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
  #{updateId,jdbcType=BIGINT}, #{updateName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <!--通过实体作为筛选条件查询-->
    <select id="findAll" parameterType="com.sch.commoditybase.AO.SearchCommodityAO" resultMap="BaseResultMap">
        select id, category_id, `name`, price, `describe`, status, url,
        create_name, create_time, update_name, update_time
        from t_commodity
        <where>
            <if test="name != null and name != ''">
                and `name` like concat('%',#{name},'%')
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <!--修改商品状态-->
    <update id="updateCommodityStatus" parameterType="com.sch.commodityservice.dto.UpdateCommodityStatusDTO">
        update t_commodity
        set status=#{status},update_id=#{updateId},update_name=#{updateName},update_time=#{updateTime}
        where id=#{id}
    </update>
    <!--修改商品信息-->
    <update id="updateCommodity" parameterType="com.sch.commodityservice.dto.UpdateCommodityDTO">
        update t_commodity
        set category_id=#{categoryId},status=#{status},`name`=#{name},price=#{price},`describe`=#{describe}
        ,update_id=#{updateId},update_name=#{updateName},update_time=#{updateTime}
        where id=#{id}
    </update>
    <!--根据商品id查询商品，分类名，图片-->
    <select id="findById" resultType="com.sch.commodityservice.dto.CommodityDetailDTO">
        select tc.id,tci.url,tc.category_id,c.name as 'categoryName', tc.name, tc.price, tc.describe, tc.status,
        tc.create_name, tc.create_time, tc.update_name, tc.update_time
        from t_commodity tc
        left join t_commodity_image tci
        on tc.id=tci.commodity_id
        left join t_category c
        on tc.category_id=c.id
        where tc.id=#{id}
    </select>
    <!--根据商品id列表查询-->
    <select id="findByIds" resultMap="BaseResultMap">
        select id, category_id, `name`, price, `describe`, status, url,
        create_name, create_time, update_name, update_time
        from t_commodity
        where id in
        <foreach collection="collection" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
</mapper>